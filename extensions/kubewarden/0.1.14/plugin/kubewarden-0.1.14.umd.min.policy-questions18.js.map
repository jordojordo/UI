{"version":3,"sources":["webpack://kubewarden-0.1.14/./questions/policy-questions/user-group-psp.yml"],"names":["doc","module","exports","length"],"mappings":"qLAAA,MAAMA,EAAM,CAAC,CAAE,UAAY,CAAC,CAAE,QAAU,KAAM,YAAc,gHAAiH,MAAQ,WAAY,MAAQ,cAAe,UAAW,EAAO,YAAa,EAAM,KAAO,SAAU,SAAW,eAAiB,CAAE,QAAU,GAAI,YAAc,sDAAuD,MAAQ,WAAY,MAAQ,cAAe,YAAa,EAAM,KAAO,OAAQ,SAAW,cAAe,aAAe,CAAC,CAAE,QAAU,GAAI,QAAU,0FAA2F,MAAQ,WAAY,MAAQ,OAAQ,QAAU,CAAC,YAAa,mBAAoB,YAAa,KAAO,OAAQ,SAAW,oBAAsB,CAAE,SAAU,EAAO,MAAQ,WAAY,MAAQ,YAAa,QAAU,gEAAiE,MAAQ,YAAa,QAAU,uQAAwQ,KAAO,UAAW,SAAW,yBAA2B,CAAE,QAAU,GAAI,YAAc,wIAAyI,MAAQ,WAAY,MAAQ,SAAU,QAAU,gEAAiE,YAAa,EAAM,KAAO,OAAQ,SAAW,qBAAsB,aAAe,CAAC,CAAE,QAAU,EAAG,MAAQ,WAAY,MAAQ,MAAO,QAAU,gEAAiE,QAAU,qBAAsB,KAAO,MAAO,SAAW,0BAA4B,CAAE,QAAU,EAAG,MAAQ,WAAY,MAAQ,MAAO,QAAU,gEAAiE,QAAU,oBAAqB,KAAO,MAAO,SAAW,8BAAkC,CAAE,QAAU,GAAI,YAAc,+DAAgE,MAAQ,WAAY,MAAQ,eAAgB,YAAa,EAAM,KAAO,OAAQ,SAAW,eAAgB,aAAe,CAAC,CAAE,QAAU,GAAI,QAAU,0FAA2F,MAAQ,WAAY,MAAQ,OAAQ,QAAU,CAAC,YAAa,mBAAoB,YAAa,KAAO,OAAQ,SAAW,qBAAuB,CAAE,SAAU,EAAO,MAAQ,WAAY,MAAQ,YAAa,QAAU,kEAAmE,KAAO,UAAW,SAAW,0BAA4B,CAAE,QAAU,GAAI,YAAc,wIAAyI,MAAQ,WAAY,MAAQ,SAAU,QAAU,kEAAmE,YAAa,EAAM,KAAO,OAAQ,SAAW,sBAAuB,aAAe,CAAC,CAAE,QAAU,EAAG,MAAQ,WAAY,MAAQ,MAAO,QAAU,kEAAmE,QAAU,qBAAsB,KAAO,MAAO,SAAW,2BAA6B,CAAE,QAAU,EAAG,MAAQ,WAAY,MAAQ,MAAO,QAAU,kEAAmE,QAAU,oBAAqB,KAAO,MAAO,SAAW,+BAAmC,CAAE,QAAU,GAAI,YAAc,2CAA4C,MAAQ,WAAY,MAAQ,sBAAuB,YAAa,EAAM,KAAO,OAAQ,SAAW,sBAAuB,aAAe,CAAC,CAAE,QAAU,GAAI,QAAU,0FAA2F,MAAQ,WAAY,MAAQ,OAAQ,QAAU,CAAC,YAAa,mBAAoB,YAAa,KAAO,OAAQ,SAAW,4BAA8B,CAAE,SAAU,EAAO,MAAQ,WAAY,MAAQ,YAAa,QAAU,gFAAiF,KAAO,UAAW,SAAW,iCAAmC,CAAE,QAAU,GAAI,YAAc,wIAAyI,MAAQ,WAAY,MAAQ,SAAU,QAAU,gFAAiF,YAAa,EAAM,KAAO,OAAQ,SAAW,6BAA8B,aAAe,CAAC,CAAE,QAAU,EAAG,MAAQ,WAAY,MAAQ,MAAO,QAAU,gFAAiF,QAAU,qBAAsB,KAAO,MAAO,SAAW,kCAAoC,CAAE,QAAU,EAAG,MAAQ,WAAY,MAAQ,MAAO,QAAU,gFAAiF,QAAU,oBAAqB,KAAO,MAAO,SAAW,yCAC/4JC,EAAOC,QAAUF,EAAIG,QAAU,EAAIH,EAAI,GAAKA","file":"kubewarden-0.1.14.umd.min.policy-questions18.js","sourcesContent":["const doc = [({\"questions\":[({\"default\":null, \"description\":\"This policy is a replacement for the Kubernetes Pod Security Policy that controls containers user and groups.\", \"group\":\"Settings\", \"label\":\"Description\", \"required\":false, \"hide_input\":true, \"type\":\"string\", \"variable\":\"description\"}), ({\"default\":[], \"description\":\"Controls which user ID the containers are run with.\", \"group\":\"Settings\", \"label\":\"Run as user\", \"hide_input\":true, \"type\":\"map[\", \"variable\":\"run_as_user\", \"subquestions\":[({\"default\":\"\", \"tooltip\":\"Defines the strategy used by the policy to enforce users and groups used in containers.\", \"group\":\"Settings\", \"label\":\"Rule\", \"options\":[\"MustRunAs\", \"MustRunAsNonRoot\", \"RunAsAny\"], \"type\":\"enum\", \"variable\":\"run_as_user.rule\"}), ({\"default\":false, \"group\":\"Settings\", \"label\":\"Overwrite\", \"show_if\":\"run_as_user.rule=MustRunAs||run_as_user.rule=MustRunAsNonRoot\", \"title\":\"Overwrite\", \"tooltip\":\"The overwrite attribute can be set only with the MustRunAs rule. This flag configures the policy to mutate the runAsUser or runAsGroup despite of the value present in the request - even if the value is a valid one. The default value of this attribute is false.\", \"type\":\"boolean\", \"variable\":\"run_as_user.overwrite\"}), ({\"default\":[], \"description\":\"Ranges is a list of JSON objects with two attributes: min and max. Each range object define the user/group ID range used by the rule.\", \"group\":\"Settings\", \"label\":\"Ranges\", \"show_if\":\"run_as_user.rule=MustRunAs||run_as_user.rule=MustRunAsNonRoot\", \"hide_input\":true, \"type\":\"map[\", \"variable\":\"run_as_user.ranges\", \"subquestions\":[({\"default\":0, \"group\":\"Settings\", \"label\":\"min\", \"show_if\":\"run_as_user.rule=MustRunAs||run_as_user.rule=MustRunAsNonRoot\", \"tooltip\":\"Minimum UID or GID\", \"type\":\"int\", \"variable\":\"run_as_user.ranges.min\"}), ({\"default\":0, \"group\":\"Settings\", \"label\":\"max\", \"show_if\":\"run_as_user.rule=MustRunAs||run_as_user.rule=MustRunAsNonRoot\", \"tooltip\":\"Maxium UID or GID\", \"type\":\"int\", \"variable\":\"run_as_user.ranges.max\"})]})]}), ({\"default\":[], \"description\":\"Controls which primary group ID the containers are run with.\", \"group\":\"Settings\", \"label\":\"Run as group\", \"hide_input\":true, \"type\":\"map[\", \"variable\":\"run_as_group\", \"subquestions\":[({\"default\":\"\", \"tooltip\":\"Defines the strategy used by the policy to enforce users and groups used in containers.\", \"group\":\"Settings\", \"label\":\"Rule\", \"options\":[\"MustRunAs\", \"MustRunAsNonRoot\", \"RunAsAny\"], \"type\":\"enum\", \"variable\":\"run_as_group.rule\"}), ({\"default\":false, \"group\":\"Settings\", \"label\":\"Overwrite\", \"show_if\":\"run_as_group.rule=MustRunAs||run_as_group.rule=MustRunAsNonRoot\", \"type\":\"boolean\", \"variable\":\"run_as_group.overwrite\"}), ({\"default\":[], \"description\":\"Ranges is a list of JSON objects with two attributes: min and max. Each range object define the user/group ID range used by the rule.\", \"group\":\"Settings\", \"label\":\"Ranges\", \"show_if\":\"run_as_group.rule=MustRunAs||run_as_group.rule=MustRunAsNonRoot\", \"hide_input\":true, \"type\":\"map[\", \"variable\":\"run_as_group.ranges\", \"subquestions\":[({\"default\":0, \"group\":\"Settings\", \"label\":\"min\", \"show_if\":\"run_as_group.rule=MustRunAs||run_as_group.rule=MustRunAsNonRoot\", \"tooltip\":\"Minimum UID or GID\", \"type\":\"int\", \"variable\":\"run_as_group.ranges.min\"}), ({\"default\":0, \"group\":\"Settings\", \"label\":\"max\", \"show_if\":\"run_as_group.rule=MustRunAs||run_as_group.rule=MustRunAsNonRoot\", \"tooltip\":\"Maxium UID or GID\", \"type\":\"int\", \"variable\":\"run_as_group.ranges.max\"})]})]}), ({\"default\":[], \"description\":\"Controls which group IDs containers add.\", \"group\":\"Settings\", \"label\":\"Supplemental groups\", \"hide_input\":true, \"type\":\"map[\", \"variable\":\"supplemental_groups\", \"subquestions\":[({\"default\":\"\", \"tooltip\":\"Defines the strategy used by the policy to enforce users and groups used in containers.\", \"group\":\"Settings\", \"label\":\"Rule\", \"options\":[\"MustRunAs\", \"MustRunAsNonRoot\", \"RunAsAny\"], \"type\":\"enum\", \"variable\":\"supplemental_groups.rule\"}), ({\"default\":false, \"group\":\"Settings\", \"label\":\"Overwrite\", \"show_if\":\"supplemental_groups.rule=MustRunAs||supplemental_groups.rule=MustRunAsNonRoot\", \"type\":\"boolean\", \"variable\":\"supplemental_groups.overwrite\"}), ({\"default\":[], \"description\":\"Ranges is a list of JSON objects with two attributes: min and max. Each range object define the user/group ID range used by the rule.\", \"group\":\"Settings\", \"label\":\"Ranges\", \"show_if\":\"supplemental_groups.rule=MustRunAs||supplemental_groups.rule=MustRunAsNonRoot\", \"hide_input\":true, \"type\":\"map[\", \"variable\":\"supplemental_groups.ranges\", \"subquestions\":[({\"default\":0, \"group\":\"Settings\", \"label\":\"min\", \"show_if\":\"supplemental_groups.rule=MustRunAs||supplemental_groups.rule=MustRunAsNonRoot\", \"tooltip\":\"Minimum UID or GID\", \"type\":\"int\", \"variable\":\"supplemental_groups.ranges.min\"}), ({\"default\":0, \"group\":\"Settings\", \"label\":\"max\", \"show_if\":\"supplemental_groups.rule=MustRunAs||supplemental_groups.rule=MustRunAsNonRoot\", \"tooltip\":\"Maxium UID or GID\", \"type\":\"int\", \"variable\":\"supplemental_groups.ranges.max\"})]})]})]})];\nmodule.exports = doc.length <= 1 ? doc[0] : doc;"],"sourceRoot":""}