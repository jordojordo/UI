{"version":3,"sources":["webpack://kubewarden-0.1.13/./questions/policy-questions/deprecated-api-versions.yml"],"names":["doc","module","exports","length"],"mappings":"mLAAA,MAAMA,EAAM,CAAC,CAAE,UAAY,CAAC,CAAE,QAAU,KAAM,YAAc,qQAAsQ,MAAQ,WAAY,MAAQ,cAAe,UAAW,EAAO,YAAa,EAAM,KAAO,SAAU,SAAW,eAAiB,CAAE,QAAU,GAAI,QAAU,2HAA4H,MAAQ,WAAY,MAAQ,qBAAsB,UAAW,EAAO,KAAO,SAAU,SAAW,sBAAwB,CAAE,SAAU,EAAM,QAAU,iKAAkK,MAAQ,WAAY,MAAQ,sBAAuB,UAAW,EAAO,KAAO,UAAW,SAAW,0BAC7+BC,EAAOC,QAAUF,EAAIG,QAAU,EAAIH,EAAI,GAAKA","file":"kubewarden-0.1.13.umd.min.policy-questions5.js","sourcesContent":["const doc = [({\"questions\":[({\"default\":null, \"description\":\"This policy detects usage of Kubernetes resources that have been deprecated or removed. At deployment time, the operator must provide a Kubernetes version to use when looking for deprecation/removal objects. This is done via the kubernetes_version attribute.\", \"group\":\"Settings\", \"label\":\"Description\", \"required\":false, \"hide_input\":true, \"type\":\"string\", \"variable\":\"description\"}), ({\"default\":\"\", \"tooltip\":\"The policy will detect all the Kubernetes resources that are deprecated or removed starting from the Kubernetes version.\", \"group\":\"Settings\", \"label\":\"Kubernetes Version\", \"required\":false, \"type\":\"string\", \"variable\":\"kubernetes_version\"}), ({\"default\":true, \"tooltip\":\"By default the policy will prevent the usage of Kubernetes resources that are already deprecated, but not yet removed. This setting will change that behavior.\", \"group\":\"Settings\", \"label\":\"Deny on Deprecation\", \"required\":false, \"type\":\"boolean\", \"variable\":\"deny_on_deprecation\"})]})];\nmodule.exports = doc.length <= 1 ? doc[0] : doc;"],"sourceRoot":""}